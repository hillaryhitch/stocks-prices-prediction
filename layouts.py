import dash_core_components as dcc
import dash_html_components as html
import plotly.graph_objs as go
import pandas as pd
import numpy as np
import dash
import dash_table
# from dash.dash_table.Format import Group
# from dash.dash_table import Format
from dash_table.Format import Format, Group
import dash_table.FormatTemplate as FormatTemplate
from datetime import datetime as dt
from app import app
from datetime import timedelta,date
ticks=["DDD",
"MMM",
"EGHT",
"AOS",
"ATEN",
"AIR",
"AAN",
"ABB",
"ABT",
"ABBV",
"ANF",
"AGD",
"AWP",
"ACP",
"JEQ",
"ASGI",
"AOD",
"ABM",
"AKR",
"ACEL",
"ACN",
"ACCO",
"AYI",
"GOLF",
"ADX",
"PEO",
"ADCT",
"AGRO",
"ADNT",
"ADT",
"ATGE",
"AAP",
"WMS",
"ASIX",
"AVK",
"ACM",
"AEFC",
"AEG",
"AER",
"AJRD",
"AMG",
"MGR",
"AFL",
"MITT",
"AGCO",
"A",
"AEM",
"ADC",
"AL",
"APD",
"ALG",
"AGI",
"ALK",
"AIN",
"ALB",
"ACI",
"AA",
"ALC",
"ALEX",
"ALX",
"ARE",
"AQN",
"AQNA",
"AQNB",
"BABA",
"Y",
"ATI",
"ALLE",
"ALE",
"ADS",
"AFB",
"AWF",
"AB",
"AIO",
"CBH",
"NCV",
"NCZ",
"ACV",
"NFJ",
"NIE",
"ALSN",
"ALL",
"ALLY",
"PINE",
"ALTG",
"AYX",
"ATUS",
"MO",
"ACH",
"AMBC",
"ABEV",
"AMC",
"AMCR",
"AEE",
"AMRC",
"AMOV",
"AMX",
"AAT",
"AXL",
"ACC",
"AEO",
"AEP",
"AEL",
"AXP",
"AFG",
"AFGB",
"AFGC",
"AFGD",
"AMH",
"AIG",
"ARL",
"AWR",
"AMT",
"AVD",
"AWK",
"COLD",
"AMP",
"ABC",
"AMN",
"AMRX",
"AP",
"APH",
"AXR",
"AME",
"PLAN",
"DYFN",
"FINS",
"AU",
"BUD",
"NLY",
"AM",
"AR",
"ANTM",
"AON",
"AIV",
"APG",
"ARI",
"APO",
"AFT",
"AIF",
"APLE",
"AIT",
"ATR",
"APTV",
"ARMK",
"ABR",
"ARC",
"MT",
"MTCN",
"ARCH",
"ADM",
"AROC",
"ARNC",
"ARCO",
"ACA",
"RCUS",
"ASC",
"ACRE",
"ARDC",
"ARES",
"AGX",
"ARGD",
"ARGO",
"ANET",
"AI",
"AIC",
"ARLO",
"AHH",
"ARR",
"AFI",
"AWI",
"ARW",
"AJG",
"APAM",
"ASA",
"ABG",
"ASX",
"ASGN",
"AHT",
"ASH",
"ASPN",
"AMK",
"ASB",
"AC",
"AIZ",
"AGO",
"AZN",
"T",
"TBB",
"TBC",
"ATTO",
"ATKR",
"ATCO",
"ATO",
"ACB",
"ATHM",
"ALV",
"AN",
"AZO",
"AVLR",
"AVB",
"AGR",
"AVNS",
"AVTR",
"AVYA",
"AVY",
"AVNT",
"AVA",
"AXTA",
"AXS",
"AX",
"AZUL",
"AZRE",
"AZZ",
"BGS",
"BW",
"BGH",
"BMI",
"BCSF",
"BKR",
"BBN",
"BLL",
"BANC",
"BBAR",
"BBVA",
"BBD",
"BBDO",
"BCH",
"BLX",
"BSBR",
"BSAC",
"BSMX",
"SAN",
"CIB",
"BAC",
"BOH",
"BMO",
"NTB",
"BNS",
"BKU",
"BCS",
"BBDC",
"MCI",
"MPV",
"BNED",
"B",
"GOLD",
"BHC",
"BAX",
"BCE",
"BZH",
"BDX",
"BDXB",
"BDC",
"BRBR",
"BHE",
"BHLB",
"BERY",
"BBY",
"BEST",
"BGSF",
"BHP",
"BIG",
"BH",
"BILL",
"BHVN",
"BIO",
"BJ",
"BKH",
"BKI",
"BSM",
"BB",
"CII",
"BHK",
"HYT",
"BTZ",
"DSU",
"BGR",
"BDJ",
"EGF",
"FRA",
"BGT",
"BOE",
"BME",
"BMEZ",
"BKT",
"BGY",
"BKN",
"BTA",
"BIT",
"MUI",
"MUA",
"BYM",
"BFK",
"BLE",
"BTT",
"MUC",
"MHD",
"MFL",
"MUJ",
"MHN",
"MUE",
"MVT",
"MYC",
"MCA",
"MYD",
"MIY",
"MYJ",
"MYN",
"MPA",
"MQT",
"MYI",
"MQY",
"BNY",
"BCX",
"BST",
"BSTZ",
"BUI",
"BHV",
"BLK",
"BGB",
"BGX",
"BSL",
"BE",
"APRN",
"BXC",
"DCF",
"DHF",
"DMB",
"DSM",
"LEO",
"BA",
"BCC",
"BOOT",
"BAH",
"BWA",
"BORR",
"SAM",
"BXP",
"BSX",
"BOX",
"BYD",
"BPMP",
"BP",
"BPT",
"BRC",
"BHR",
"BDN",
"BWG",
"LND",
"BAK",
"BRFS",
"MNRL",
"BFAM",
"BEDU",
"BSIG",
"BV",
"EAT",
"BCO",
"BMY",
"VTOL",
"BTI",
"BRX",
"BRMK",
"BR",
"BKD",
"BAM",
"BBU",
"BIPC",
"BIP",
"RA",
"BEPC",
"BEP",
"BRO",
"BRT",
"BC",
"BKE",
"BVN",
"BBW",
"BG",
"BURL",
"BWXT",
"BY",
"CABO",
"CBT",
"CACI",
"WHD",
"CADE",
"CAE",
"CAL",
"CWT",
"CALX",
"ELY",
"CPE",
"CPT",
"CCJ",
"CPB",
"CWH",
"GOOS",
"CM",
"CNI",
"CNQ",
"CP",
"CANG",
"CNNE",
"CAJ",
"CGC",
"COF",
"BXMT",
"CPRI",
"CAH",
"CSL",
"KMX",
"CCL",
"CUK",
"CRS",
"CSV",
"CARR",
"CARS",
"CRI",
"CVNA",
"CSLT",
"CTLT",
"CAT",
"CATO",
"CBZ",
"CBL",
"IGR",
"CBRE",
"FUN",
"CDR",
"CE",
"CLS",
"CPAC",
"CX",
"CVE",
"CNC",
"CEN",
"CNP",
"EBR",
"CEPU",
"CCS",
"CDAY",
"CF",
"GIB",
"CHX",
"CHRA",
"CRL",
"CLDT",
"CMCM",
"CHGG",
"CHE",
"CC",
"CHMI",
"CPK",
"CVX",
"CHWY",
"CHS",
"CIM",
"CEA",
"CHN",
"CGA",
"LFC",
"COE",
"SNP",
"ZNH",
"CYD",
"CMG",
"CHH",
"CB",
"CHT",
"CHD",
"CIEN",
"CI",
"CNK",
"CINR",
"CIR",
"CCAC",
"BLW",
"C",
"CFG",
"CIA",
"CIO",
"CVEO",
"CLH",
"CCO",
"EMO",
"CEM",
"CTR",
"CLW",
"CWEN",
"CLF",
"CLPR",
"CLX",
"NET",
"CMS",
"CMSA",
"CMSC",
"CMSD",
"CNA",
"CNF",
"CNHI",
"CNO",
"CNX",
"KOF",
"KO",
"CCEP",
"CDE",
"FOF",
"CNS",
"UTF",
"LDP",
"RQI",
"RNP",
"PSF",
"RFI",
"CFX",
"CL",
"CXE",
"CIF",
"CXH",
"CMU",
"STK",
"CCZ",
"CMA",
"FIX",
"CMC",
"CBU",
"CYH",
"CHCT",
"CIG",
"CBD",
"SBS",
"ELP",
"CCU",
"CODI",
"CMP",
"CRK",
"CAG",
"CCM",
"CNMD",
"COP",
"CEIX",
"ED",
"STZ",
"CSTM",
"TCS",
"CLR",
"VLRS",
"CTRA",
"CPS",
"CTK",
"CPA",
"CLB",
"CXW",
"CORR",
"CPLG",
"CNR",
"GLW",
"CAAP",
"OFC",
"CTVA",
"CMRE",
"COTY",
"CUZ",
"CPF",
"CR",
"BAP",
"CS",
"CPG",
"CEQP",
"CRH",
"CRT",
"CAPL",
"CCI",
"CCK",
"CTS",
"CUBE",
"CFR",
"CULP",
"CMI",
"CURO",
"CW",
"SRV",
"SZC",
"CWK",
"CUBB",
"CUBI",
"CVI",
"UAN",
"CVS",
"CELP",
"DHI",
"DAN",
"DHR",
"DAC",
"DQ",
"DRI",
"DAR",
"DVA",
"DCP",
"DECK",
"DE",
"DEX",
"DDF",
"DKL",
"DK",
"DELL",
"DAL",
"DLX",
"DBI",
"DESP",
"DB",
"DVN",
"DHX",
"DHT",
"DEO",
"DRH",
"DSX",
"DKS",
"DBD",
"DMS",
"DLR",
"DDS",
"DDT",
"DIN",
"DFS",
"DLB",
"DG",
"D",
"DCUE",
"DPZ",
"DCI",
"DFIN",
"LPG",
"DSL",
"DBL",
"DLY",
"PLOW",
"DEI",
"DOV",
"DOW",
"RDY",
"DRD",
"DRQ",
"DS",
"DTE",
"DTP",
"DTW",
"DCO",
"DNP",
"DTF",
"DPG",
"DUK",
"DUKB",
"DRE",
"DNB",
"DD",
"DXC",
"DY",
"DLNG",
"DT",
"DX",
"ELF",
"EXP",
"ECC",
"ECCB",
"ECCX",
"ECCY",
"EIC",
"ESTE",
"DEA",
"EGP",
"EMN",
"KODK",
"ETN",
"ETV",
"ETW",
"EOI",
"EOS",
"EFT",
"EFL",
"ETX",
"EOT",
"EVN",
"ETJ",
"EFR",
"EVF",
"EVG",
"EVT",
"ETO",
"ETG",
"ETB",
"EXD",
"ETY",
"EXG",
"ECL",
"EC",
"EPC",
"EIX",
"EW",
"ELAN",
"ELAT",
"ESTC",
"EGO",
"ESI",
"ELVT",
"LLY",
"EFC",
"EARN",
"ERJ",
"EME",
"EEX",
"EBS",
"EMR",
"ESRT",
"EIG",
"EDN",
"ENB",
"ENBA",
"EHC",
"DAVA",
"EXK",
"ENIA",
"ENIC",
"ENR",
"ET",
"EPAC",
"ERF",
"ENS",
"E",
"ENLC",
"EBF",
"ENVA",
"NPO",
"ETR",
"ELC",
"ENJ",
"ENO",
"EPD",
"EVC",
"ENV",
"NVST",
"EVA",
"ENZ",
"EOG",
"EPAM",
"EPR",
"EQT",
"EFX",
"EQNR",
"EQH",
"ETRN",
"EQC",
"ELS",
"EQR",
"EQS",
"ESE",
"ESNT",
"EPRT",
"WTRG",
"WTRU",
"ESS",
"EL",
"EURN",
"EEA",
"EB",
"EVR",
"RE",
"EVRG",
"EVRI",
"ES",
"EVTC",
"EVH",
"AQUA",
"EXPR",
"EXTN",
"EXR",
"XOM",
"FNB",
"FN",
"FDS",
"FICO",
"SFUN",
"FPAC",
"FTCH",
"FPI",
"FSLY",
"FBK",
"AGM",
"FRT",
"FSS",
"FMN",
"FHI",
"FDX",
"RACE",
"FOE",
"FNF",
"FIS",
"FMO",
"FINV",
"FAF",
"FBP",
"FCF",
"FHN",
"FR",
"AG",
"FRC",
"FFA",
"FMY",
"FDEU",
"FIF",
"FSD",
"FTHY",
"FPF",
"FPL",
"FCT",
"FGB",
"FEO",
"FAM",
"FE",
"FPH",
"FVRR",
"FBC",
"DFP",
"PFD",
"PFO",
"FFC",
"FLC",
"FLT",
"FLNG",
"FND",
"FTK",
"FLO",
"FLS",
"FLR",
"FMC",
"FMX",
"FL",
"F",
"FOR",
"FTS",
"FTV",
"FTAI",
"FSM",
"FBHS",
"FET",
"FCPT",
"FEDU",
"FNV",
"FC",
"BEN",
"FT",
"FCX",
"FMS",
"FDP",
"RESI",
"FRO",
"FSK",
"FCN",
"FF",
"GCV",
"GAB",
"GGZ",
"GGT",
"GUT",
"GBL",
"GNT",
"GME",
"GCI",
"GPS",
"GTX",
"IT",
"GLOP",
"GTES",
"GATX",
"GCP",
"GNK",
"GNRC",
"GAM",
"GD",
"GE",
"GIS",
"GM",
"GCO",
"GEL",
"GNE",
"G",
"GPC",
"GNW",
"GEO",
"GPRK",
"GPJA",
"GGB",
"GTY",
"GFL",
"GFLU",
"GIL",
"GLT",
"GKOS",
"GSK",
"CO",
"GMRE",
"GNL",
"GLP",
"GPN",
"GSL",
"GSLD",
"GLOB",
"GL",
"GMED",
"GMS",
"GDDY",
"GOL",
"GFI",
"GSBD",
"GS",
"GER",
"GRC",
"GGG",
"EAF",
"GHM",
"GHC",
"GVA",
"GPMT",
"GPK",
"GTN",
"AJX",
"AJXA",
"GWB",
"GDOT",
"GBX",
"GHL",
"GHG",
"GEF",
"GFF",
"GPI",
"GRUB",
"PAC",
"ASR",
"AVAL",
"SUPV",
"TV",
"GES",
"GOF",
"GBAB",
"GWRE",
"HRB",
"FUL",
"HAE",
"HAL",
"HBB",
"HBI",
"HNGR",
"HASI",
"HOG",
"HMY",
"HSC",
"HGH",
"HIG",
"HVT",
"HE",
"HCA",
"HCI",
"HDB",
"HR",
"HTA",
"PEAK",
"HL",
"HEI",
"HLX",
"HP",
"HLF",
"HRI",
"HCXY",
"HTGC",
"HRTG",
"HT",
"HSY",
"HTZ",
"HES",
"HESM",
"HPE",
"HXL",
"HEXO",
"PCF",
"HGLB",
"HFRO",
"HIW",
"HIL",
"HI",
"HTH",
"HGV",
"HLT",
"HNI",
"HMLP",
"HEP",
"HFC",
"HD",
"HMC",
"HON",
"HMN",
"HZN",
"HRL",
"HST",
"HLI",
"HOV",
"HHC",
"HWM",
"HPQ",
"HSBC",
"HNP",
"HUBB",
"HUBS",
"HBM",
"HPP",
"HUM",
"HII",
"HUN",
"HUYA",
"H",
"HY",
"IAA",
"IAG",
"IBN",
"ICL",
"IDA",
"IEX",
"IDT",
"INFO",
"ITW",
"IMAX",
"ICD",
"IHC",
"IRT",
"IFN",
"IBA",
"INFY",
"ING",
"IR",
"NGVT",
"INGR",
"IIPR",
"INSI",
"NSP",
"INSP",
"IBP",
"ITGR",
"ICE",
"IHG",
"IFS",
"IBM",
"IFF",
"IGT",
"IP",
"INSW",
"IPG",
"IPI",
"IVC",
"VBF",
"VCV",
"IHIT",
"IHTA",
"VLT",
"IVR",
"OIA",
"VMO",
"VKQ",
"VPV",
"IVZ",
"IQI",
"VVR",
"VTN",
"VGM",
"IIM",
"NVTA",
"INVH",
"IO",
"IQV",
"IRM",
"IRS",
"ITCB",
"ITUB",
"ITT",
"IVH",
"JPM",
"JILL",
"SJM",
"JBL",
"J",
"JHX",
"JHG",
"JOF",
"JBGS",
"JEF",
"JELD",
"JT",
"JKS",
"JBT",
"BTO",
"HEQ",
"JHS",
"JHI",
"HPF",
"HPI",
"HPS",
"PDT",
"HTD",
"HTY",
"JNJ",
"JCI",
"JLL",
"JMIA",
"JNPR",
"JP",
"JE",
"LRN",
"KAI",
"KAMN",
"KAR",
"KMF",
"KYN",
"KB",
"KBH",
"KBR",
"K",
"KMPR",
"KMT",
"KW",
"KEN",
"KDP",
"KEY",
"KEYS",
"KRC",
"KRP",
"KMB",
"KIM",
"KMI",
"KFS",
"KGC",
"KEX",
"KL",
"KRG",
"KKR",
"KIO",
"KREF",
"KNX",
"KNOP",
"KN",
"KSS",
"PHG",
"KTB",
"KOP",
"KEP",
"KF",
"KFY",
"KOS",
"KRA",
"KR",
"KRO",
"KT",
"SCX",
"LHX",
"LH",
"LADR",
"LAIX",
"LW",
"LCI",
"LPI",
"LVS",
"LGI",
"LAZ",
"LZB",
"LCII",
"LEA",
"LEE",
"LEG",
"JBK",
"KTH",
"KTN",
"LDOS",
"LEJU",
"LMND",
"LC",
"LEN",
"LII",
"LEVI",
"LXP",
"LPL",
"USA",
"ASG",
"LBRT",
"LSI",
"LITB",
"LNC",
"LIN",
"LNN",
"LAD",
"LAC",
"LYV",
"LTHM",
"RAMP",
"LYG",
"SCD",
"LMT",
"L",
"LOMA",
"LPX",
"LOW",
"LXU",
"LTC",
"LUB",
"LL",
"LXFR",
"LYB",
"MTB",
"MDC",
"MHO",
"MAC",
"MFD",
"MGU",
"MIC",
"BMA",
"M",
"MCN",
"MSGE",
"MSGS",
"MMP",
"MGA",
"MX",
"MGY",
"MHLA",
"MHNC",
"MAIN",
"MMD",
"MANU",
"MTW",
"MN",
"MAN",
"MFC",
"MRO",
"MPC",
"MMI",
"MCS",
"MPX",
"HZO",
"MKL",
"VAC",
"MMC",
"MLM",
"MAS",
"DOOR",
"MTZ",
"MA",
"MTDR",
"MTRN",
"MATX",
"MLP",
"MAXR",
"MMS",
"MXL",
"MEC",
"MBI",
"MKC",
"MCD",
"MUX",
"MCK",
"MDU",
"MTL",
"MPW",
"MED",
"MD",
"MDT",
"MRK",
"MCY",
"MTH",
"MTOR",
"MTR",
"MSB",
"MEI",
"MET",
"MCB",
"MTD",
"MXE",
"MXF",
"MFA",
"MCR",
"MGF",
"MIN",
"MMT",
"MFM",
"MFV",
"MTG",
"MGP",
"MGM",
"MFGP",
"MAA",
"AMPY",
"MLR",
"HIE",
"MTX",
"MG",
"MUFG",
"MIXT",
"MFG",
"MBT",
"MODN",
"MOD",
"MC",
"MOGU",
"MHK",
"MOH",
"TAP",
"MNR",
"MEG",
"MCO",
"MS",
"CAF",
"MSD",
"EDD",
"IIF",
"MOS",
"MSI",
"MOV",
"MPLX",
"MRC",
"MSA",
"MSM",
"MSCI",
"MLI",
"MWA",
"MVF",
"MUR",
"MUSA",
"MVO",
"MYE",
"MYOV",
"NBR",
"NC",
"NTP",
"NBHC",
"NFG",
"NGG",
"NHI",
"NOV",
"NPK",
"NNN",
"NRUC",
"SID",
"NSA",
"NTCO",
"NGS",
"NGVC",
"NRP",
"NTZ",
"NWG",
"NLS",
"NVGS",
"NM",
"NMM",
"NCR",
"NP",
"NNI",
"NPTN",
"NVRO",
"HYB",
"GF",
"IRL",
"NMFC",
"EDU",
"NEWR",
"NRZ",
"NYCB",
"NYT",
"NJR",
"NEU",
"NEM",
"NR",
"NEXA",
"NREF",
"NXRT",
"NEP",
"NEE",
"NEX",
"NGL",
"NLSN",
"NKE",
"NINE",
"NIO",
"NI",
"NL",
"NOAH",
"NOK",
"NOMD",
"NMR",
"NAT",
"JWN",
"NSC",
"NOA",
"NRT",
"NOC",
"NWN",
"NWE",
"NCLH",
"NVS",
"NVO",
"DNOW",
"NRG",
"NUS",
"NUE",
"NS",
"NSS",
"NTR",
"NVG",
"NUV",
"NUW",
"NEA",
"NAZ",
"NKX",
"NCA",
"NAC",
"JCE",
"JCO",
"JQC",
"DIAX",
"JEMD",
"NEV",
"JFR",
"JRO",
"NKG",
"JGH",
"JHAA",
"NXC",
"NXN",
"NID",
"NMT",
"NMS",
"NOM",
"JLS",
"JMM",
"NZF",
"NMCO",
"NMZ",
"NMI",
"NXJ",
"NRK",
"NNY",
"NAN",
"NUO",
"NQP",
"JPC",
"JPS",
"JPT",
"JPI",
"NAD",
"JRI",
"JRS",
"BXMX",
"SPXX",
"NIM",
"NXP",
"NSL",
"JSD",
"NBB",
"NPV",
"NIQ",
"NVT",
"NVR",
"OXY",
"OII",
"OCN",
"OFG",
"OGE",
"OI",
"OIS",
"ODC",
"ORI",
"OLN",
"OHI",
"OMC",
"OGS",
"OLP",
"OCFT",
"OMF",
"OKE",
"ONE",
"ONTO",
"OOMA",
"OPY",
"ORCL",
"ORAN",
"ORC",
"OEC",
"ORN",
"IX",
"ORA",
"OSK",
"OR",
"OTIS",
"OUT",
"OSG",
"OVV",
"OMI",
"OC",
"ORCC",
"OXM",
"PCG",
"PCGU",
"PKG",
"PD",
"PAGS",
"PANW",
"PAM",
"PHX",
"PARR",
"PAR",
"PGRE",
"PKE",
"PK",
"PH",
"PSN",
"PRTY",
"PAYC",
"PBF",
"PBFX",
"BTU",
"PSO",
"PEB",
"PBA",
"PEI",
"PFSI",
"PMT",
"PAG",
"PNR",
"PEN",
"PFGC",
"PKI",
"PBT",
"PVL",
"PRT",
"PRGO",
"PTR",
"PBR",
"PFE",
"GHY",
"ISD",
"PGTI",
"PM",
"PSX",
"PSXP",
"FENG",
"PHR",
"DOC",
"PDM",
"PCQ",
"PCK",
"PZC",
"PCM",
"PTY",
"PCN",
"PDI",
"NRGX",
"PGP",
"PHK",
"PFL",
"PFN",
"PMF",
"PML",
"PMX",
"PNF",
"PNI",
"PYN",
"RCS",
"PING",
"PNW",
"PINS",
"PHD",
"PHT",
"MAV",
"MHI",
"PXD",
"PIPR",
"PBI",
"PJT",
"PAA",
"PAGP",
"PLNT",
"AGS",
"PHI",
"PLYM",
"PNC",
"PNM",
"PII",
"POR",
"PKX",
"POST",
"PSTL",
"PPG",
"PPL",
"PYS",
"PYT",
"PDS",
"APTS",
"PBH",
"PVG",
"PRI",
"PRMW",
"PGZ",
"PRA",
"PG",
"PGR",
"PLD",
"PUMP",
"PRO",
"PB",
"PRLB",
"PFS",
"PRS",
"PRU",
"PUK",
"PSB",
"TLK",
"PEG",
"PSA",
"PHM",
"PSTG",
"PMM",
"PIM",
"PMO",
"PPT",
"NEW",
"PVH",
"PZN",
"QTWO",
"QGEN",
"QUAD",
"KWR",
"NX",
"PWR",
"QD",
"DGX",
"QUOT",
"QVCC",
"QVCD",
"CTBB",
"CTDD",
"CTV",
"RRD",
"RMED",
"RDN",
"RFL",
"RL",
"RRC",
"RNGR",
"PACK",
"RJF",
"RYAM",
"RYN",
"RTX",
"RMAX",
"RC",
"RCB",
"RLGY",
"O",
"RWT",
"RM",
"RF",
"RGS",
"RGA",
"RZA",
"RZB",
"RS",
"RELX",
"RNR",
"SOL",
"RENN",
"RSG",
"REZI",
"RMD",
"RFP",
"QSR",
"RVI",
"REVG",
"REV",
"RVLV",
"REX",
"REXR",
"RH",
"RNG",
"RIO",
"RBA",
"RAD",
"RFM",
"RMM",
"RMI",
"RIV",
"RSF",
"OPP",
"RLI",
"RLJ",
"RHI",
"ROK",
"RCI",
"ROG",
"ROL",
"ROP",
"RY",
"RCL",
"RGT",
"RMT",
"RVT",
"RES",
"RPM",
"RPT",
"RYB",
"R",
"RYI",
"RHP",
"SPGI",
"SBR",
"SB",
"SFE",
"SAFE",
"SAIL",
"CRM",
"SMM",
"SBH",
"SJT",
"SD",
"SAP",
"SAK",
"SAR",
"SSL",
"BFS",
"SLB",
"SNDR",
"SWM",
"SAIC",
"SBBA",
"STNG",
"SMG",
"KTF",
"KSM",
"SRL",
"SCU",
"SCVX",
"SE",
"SA",
"SMHI",
"SEE",
"SEAS",
"WTTR",
"SEM",
"SLQT",
"SRE",
"SREA",
"ST",
"SXT",
"SQNS",
"SRG",
"SCI",
"NOW",
"SFL",
"SHAK",
"SJR",
"SHLX",
"SHW",
"FOUR",
"SHG",
"SHOP",
"SSTK",
"SBSW",
"SIG",
"SBOW",
"SI",
"SPG",
"SSD",
"SHI",
"SITC",
"SITE",
"SIX",
"TSLX",
"SJW",
"SKM",
"SKX",
"SKY",
"SLG",
"SM",
"SMAR",
"SNN",
"SNAP",
"SNA",
"SQM",
"SOI",
"SWI",
"SAH",
"SON",
"SOS",
"SOR",
"SJI",
"SJIJ",
"SO",
"SOJC",
"SOJD",
"SOLN",
"SCCO",
"LUV",
"SWX",
"SWN",
"SPAQ",
"SPE",
"SR",
"SPR",
"SAVE",
"SRC",
"SPOT",
"SRLP",
"SII",
"SPXC",
"FLOW",
"SQ",
"JOE",
"STAG",
"SMP",
"SXI",
"SWK",
"SWT",
"STN",
"SGU",
"SRT",
"STWD",
"STT",
"SPLP",
"SCS",
"SCM",
"SCL",
"STE",
"STL",
"STC",
"SF",
"STM",
"EDF",
"EDI",
"STON",
"SRI",
"STOR",
"GJH",
"GJO",
"GJS",
"SYK",
"MSC",
"RGR",
"SPH",
"SMFG",
"INN",
"SUM",
"SMLP",
"SUI",
"SLF",
"SXC",
"SU",
"STG",
"NOVA",
"SUN",
"SHO",
"SUP",
"SUZ",
"SWZ",
"SWCH",
"SYF",
"SNX",
"SNV",
"GJP",
"GJR",
"GJT",
"SYY",
"TWN",
"TSM",
"TAK",
"TAL",
"TALO",
"SKT",
"TPR",
"TRGP",
"TGT",
"TARO",
"TTM",
"TMHC",
"TRP",
"TSI",
"TEL",
"TISI",
"FTI",
"TECK",
"TK",
"TNK",
"TGNA",
"TRC",
"HQH",
"THQ",
"HQL",
"THW",
"TDOC",
"TEO",
"TDY",
"TFX",
"VIV",
"TEF",
"TDS",
"TU",
"TDF",
"EMF",
"TEI",
"GIM",
"TPX",
"TS",
"TME",
"THC",
"TNC",
"TEN",
"TVC",
"TVE",
"TDC",
"TEX",
"TX",
"TRNO",
"TTI",
"TEVA",
"TPL",
"TGH",
"TXT",
"TFII",
"AES",
"AZEK",
"BK",
"BX",
"CEE",
"SCHW",
"COO",
"GDV",
"GRX",
"GDL",
"THG",
"TRV",
"TMO",
"THR",
"TRI",
"THO",
"TDW",
"TLYS",
"TKR",
"TMST",
"TWI",
"TJX",
"TOL",
"TR",
"BLD",
"TTC",
"TD",
"NDP",
"TYG",
"TEAF",
"NTG",
"TTP",
"TPZ",
"TSQ",
"TM",
"TRTX",
"TT",
"TAC",
"TCI",
"TDG",
"RIG",
"TGS",
"TRU",
"TREC",
"TG",
"THS",
"TREX",
"TY",
"TPH",
"TNET",
"TRN",
"TSE",
"TPVG",
"TRTN",
"TGI",
"TROX",
"TBI",
"TFC",
"TNP",
"TUFN",
"TUP",
"TKC",
"TPB",
"TRQ",
"TPC",
"TWLO",
"TWTR",
"TWO",
"TYL",
"TSN",
"USB",
"USPH",
"SLCA",
"USX",
"UBER",
"UI",
"UBS",
"UDR",
"UGI",
"UGP",
"UMH",
"UA",
"UAA",
"UFI",
"UNF",
"UL",
"UNP",
"UIS",
"UMC",
"UNFI",
"UPS",
"URI",
"USM",
"X",
"UNH",
"UTL",
"UNVR",
"UVV",
"UHT",
"UHS",
"UVE",
"UTI",
"UNM",
"UNMA",
"UE",
"UBA",
"UBP",
"USFD",
"USAC",
"USNA",
"USDP",
"BIF",
"VFC",
"EGY",
"MTN",
"VAL",
"VALE",
"VLO",
"VHI",
"VMI",
"VVV",
"VAPO",
"VGR",
"VEC",
"AAPL",
"VEEV",
"VEL",
"VNTR",
"VTR",
"VNE",
"VRTV",
"VZ",
"VET",
"VRS",
"VCIF",
"VRT",
"VVI",
"VICI",
"VNCE",
"VIPS",
"SPCE",
"VHC",
"VGI",
"ZTR",
"V",
"VSH",
"VPG",
"VIST",
"VSTO",
"VST",
"VVNT",
"VMW",
"VOC",
"VCRA",
"VNO",
"VJET",
"IAE",
"IHD",
"VOYA",
"IGA",
"IGD",
"IDE",
"VMC",
"WTI",
"WPC",
"WRB",
"GWW",
"WNC",
"WD",
"WMT",
"DIS",
"HCC",
"WRE",
"WCN",
"WM",
"WAT",
"WSO",
"WTS",
"W",
"WBS",
"WEC",
"WEI",
"WMK",
"WBT",
"WFC",
"EOD",
"WELL",
"WCC",
"WST",
"WAL",
"WEA",
"EMD",
"GDO",
"EHI",
"HIX",
"HIO",
"HYI",
"SBI",
"IGI",
"PAI",
"MMU",
"WMC",
"DMO",
"MHF",
"MNP",
"WIW",
"WIA",
"WES",
"WU",
"WAB",
"WLK",
"WLKP",
"WRK",
"WHG",
"WEX",
"WY",
"WPM",
"WHR",
"WTM",
"WSR",
"WLL",
"WOW",
"WMB",
"WSM",
"WGO",
"WIT",
"WNS",
"WWW",
"WF",
"WK",
"INT",
"WWE",
"WOR",
"WPP",
"WH",
"XYF",
"XFLT",
"XHR",
"XRX",
"XIN",
"XPO",
"XYL",
"AUY",
"YELP",
"YETI",
"YEXT",
"YRD",
"DAO",
"YPF",
"YUMC",
"YUM",
"ZEN",
"ZBH",
"ZTS",
"ZTO",
"ZUO",
"ZYME",
"GOED",
"XXII",
"FAX",
"IAF",
"AEF",
"FCO",
"ACU",
"ATNM",
"AE",
"ACY",
"UAVS",
"AGE",
"AIRI",
"AXU",
"AAU",
"APT",
"AAMC",
"AMBO",
"DIT",
"AMS",
"USAS",
"AMPE",
"ANVS",
"ARMP",
"AINC",
"AWX",
"ASM",
"BTG",
"BTN",
"BCV",
"BHB",
"BRN",
"BATL",
"BIOX",
"PHGE",
"BGI",
"BKTI",
"BDR",
"BRBS",
"BRG",
"DMF",
"CMCL",
"CEI",
"CANF",
"YCBD",
"CVM",
"CET",
"LEU",
"CCF",
"CQP",
"LNG",
"CVR",
"CPHI",
"CKX",
"GLV",
"GLQ",
"GLO",
"COHN",
"CIX",
"LODE",
"CMT",
"CRMD",
"CRF",
"CLM",
"CVU",
"CIK",
"DHY",
"CTO",
"CTEK",
"DXR",
"VCF",
"VFL",
"VMM",
"DLA",
"DNN",
"DSS",
"DXF",
"GRF",
"EVM",
"CEV",
"EVV",
"EIM",
"ENX",
"EVY",
"ELMD",
"ELLO",
"ECF",
"EMAN",
"MSN",
"EMX",
"UUUU",
"ENSV",
"ELA",
"EQX",
"ESP",
"EVBN",
"EVI",
"EPM",
"FEN",
"BDL",
"FSI",
"FTF",
"FSP",
"FRD",
"FTSI",
"GAU",
"GGN",
"JOB",
"GSAT",
"GORO",
"GSV",
"AUMN",
"GSS",
"GTE",
"GPL",
"SIM",
"AIM",
"HUSA",
"IBIO",
"IMH",
"IMO",
"IOR",
"IGC",
"INDO",
"INFU",
"IHT",
"NSPR",
"ITRG",
"INS",
"THM",
"INTT",
"INUV",
"VKI",
"ISR",
"ISDR",
"ITP",
"KLR",
"KIQ",
"LGL",
"LCTX",
"MAG",
"MHH",
"MTNB",
"MMX",
"IPB",
"MTA",
"MXC",
"MLSS",
"MYO",
"NNVC",
"NHC",
"NAVB",
"NTIP",
"NBW",
"NHS",
"NML",
"NBH",
"NBO",
"NRO",
"GBR",
"NEN",
"NGD",
"NXE",
"NAK",
"NOG",
"NBY",
"NG",
"NES",
"OBLG",
"OCX",
"OGEN",
"PTN",
"PZG",
"PRK",
"PED",
"HNW",
"PLAG",
"PLG",
"PLM",
"PW",
"PLX",
"RLGT",
"UTG",
"RHE",
"RCG",
"RVP",
"REI",
"SACC",
"SACH",
"SCCB",
"SNMP",
"SEB",
"SENS",
"SVT",
"SMTS",
"SIF",
"SVM",
"SILV",
"XPL",
"LOV",
"STXS",
"SSY",
"SDPI",
"SYN",
"TKAT",
"TRX",
"TGB",
"GLU",
"TMBR",
"TMP",
"TMQ",
"TPHS",
"TRT",
"UFAB",
"UAMY",
"UUU",
"URG",
"UEC",
"VGZ",
"VNRX",
"VOLT",
"EAD",
"ERC",
"ERH",
"WRN",
"WYY",
"WTT",
"XTNT",
"ZDGE",
"ZOM"]
####################################################################################################
# 000 - FORMATTING INFO
####################################################################################################

####################### Corporate css formatting
corporate_colors = {
    'dark-blue-grey' : 'rgb(62, 64, 76)',
    'medium-blue-grey' : 'rgb(77, 79, 91)',
    'superdark-green' : 'rgb(41, 56, 55)',
    'dark-green' : 'rgb(57, 81, 85)',
    'medium-green' : 'rgb(93, 113, 120)',
    'light-green' : 'rgb(186, 218, 212)',
    'pink-red' : 'rgb(255, 101, 131)',
    'dark-pink-red' : 'rgb(247, 80, 99)',
    'white' : 'rgb(251, 251, 252)',
    'light-grey' : 'rgb(208, 206, 206)'
}

externalgraph_rowstyling = {
    'margin-left' : '15px',
    'margin-right' : '15px'
}

externalgraph_colstyling = {
    'border-radius' : '10px',
    'border-style' : 'solid',
    'border-width' : '1px',
    'border-color' : corporate_colors['superdark-green'],
    'background-color' : corporate_colors['superdark-green'],
    'box-shadow' : '0px 0px 17px 0px rgba(186, 218, 212, .5)',
    'padding-top' : '10px'
}

filterdiv_borderstyling = {
    'border-radius' : '0px 0px 10px 10px',
    'border-style' : 'solid',
    'border-width' : '1px',
    'border-color' : corporate_colors['light-green'],
    'background-color' : corporate_colors['light-green'],
    'box-shadow' : '2px 5px 5px 1px rgba(255, 101, 131, .5)'
    }



recapdiv = {
    'border-radius' : '10px',
    'border-style' : 'solid',
    'border-width' : '1px',
    'border-color' : 'rgb(251, 251, 252, 0.1)',
    'margin-left' : '15px',
    'margin-right' : '15px',
    'margin-top' : '15px',
    'margin-bottom' : '15px',
    'padding-top' : '5px',
    'padding-bottom' : '5px',
    'background-color' : 'rgb(251, 251, 252, 0.1)'
    }

recapdiv_text = {
    'text-align' : 'left',
    'font-weight' : '350',
    'color' : corporate_colors['white'],
    'font-size' : '1.5rem',
    'letter-spacing' : '0.04em'
    }

####################### Corporate chart formatting

corporate_title = {
    'font' : {
        'size' : 16,
        'color' : corporate_colors['white']}
}

corporate_xaxis = {
    'showgrid' : False,
    'linecolor' : corporate_colors['light-grey'],
    'color' : corporate_colors['light-grey'],
    'tickangle' : 315,
    'titlefont' : {
        'size' : 12,
        'color' : corporate_colors['light-grey']},
    'tickfont' : {
        'size' : 11,
        'color' : corporate_colors['light-grey']},
    'zeroline': False
}

corporate_yaxis = {
    'showgrid' : True,
    'color' : corporate_colors['light-grey'],
    'gridwidth' : 0.5,
    'gridcolor' : corporate_colors['dark-green'],
    'linecolor' : corporate_colors['light-grey'],
    'titlefont' : {
        'size' : 12,
        'color' : corporate_colors['light-grey']},
    'tickfont' : {
        'size' : 11,
        'color' : corporate_colors['light-grey']},
    'zeroline': False
}

corporate_font_family = 'Dosis'

corporate_legend = {
    'orientation' : 'h',
    'yanchor' : 'bottom',
    'y' : 1.01,
    'xanchor' : 'right',
    'x' : 1.05,
	'font' : {'size' : 9, 'color' : corporate_colors['light-grey']}
} # Legend will be on the top right, above the graph, horizontally

corporate_margins = {'l' : 5, 'r' : 5, 't' : 45, 'b' : 15}  # Set top margin to in case there is a legend

corporate_layout = go.Layout(
    font = {'family' : corporate_font_family},
    title = corporate_title,
    title_x = 0.5, # Align chart title to center
    paper_bgcolor = 'rgba(0,0,0,0)',
    plot_bgcolor = 'rgba(0,0,0,0)',
    xaxis = corporate_xaxis,
    yaxis = corporate_yaxis,
    height = 270,
    legend = corporate_legend,
    margin = corporate_margins
    )
# 000 - DEFINE REUSABLE COMPONENTS AS FUNCTIONS
####################################################################################################

#####################
# Header 
def get_header():

    header = html.Div([

        html.Div([], className = 'col-2'), #Same as img width, allowing to have the title centrally aligned

        html.Div([
            html.H1(children='Stocks Prices Prediction',
                    style = {'textAlign' : 'center'}
            )],
            className='col-8',
            style = {'padding-top' : '1%'}
        ),

        html.Div([
            html.Img(
                    src = app.get_asset_url('logo_001c.png'),
                    height = '43 px',
                    width = 'auto')
            ],
            className = 'col-2',
            style = {
                    'align-items': 'center',
                    'padding-top' : '1%',
                    'height' : 'auto'})

        ],
        className = 'row',
        style = {'height' : '4%',
                'background-color' : corporate_colors['superdark-green']}
        )

    return header




#####################
# Empty row

def get_emptyrow(h='45px'):
    """This returns an empty row of a defined height"""

    emptyrow = html.Div([
        html.Div([
            html.Br()
        ], className = 'col-12')
    ],
    className = 'row',
    style = {'height' : h})

    return emptyrow

####################################################################################################
# 001 - stocks
####################################################################################################

stocks = html.Div([
    #####################
    #Row 1 : Header
    get_header(),

    #####################
    #Row 2 : Nav bar
    # get_navbar('sales'),

    #####################
    #Row 3 : Filters
    html.Div([ # External row

        html.Div([ # External 12-column

            html.Div([ # Internal row

                #Internal columns
                html.Div([
                ],
                className = 'col-2'), # Blank 2 columns

                #Filter pt 1
                html.Div([

                    html.Div([
                        html.H5(
                            children='Filters by Date:',
                            style = {'text-align' : 'left', 'color' : corporate_colors['medium-blue-grey']}
                        ),
                        #Date range picker
                        html.Div(['Model Training start - end dates: ',
                            dcc.DatePickerRange(
                                id='date-picker-price',
                                start_date = date(2021, 1, 1),
                                end_date = date.today()-timedelta(days=3),
                                min_date_allowed =  date(2021, 1, 1),
                                max_date_allowed = date.today()-timedelta(days=3),
                                start_date_placeholder_text = 'Start date',
                                display_format='DD-MMM-YYYY',
                                end_date_placeholder_text = 'End date',
                                style = {'font-size': '12px','display': 'inline-block', 'border-radius' : '2px', 'border' : '1px solid #ccc', 'color': '#333', 'border-spacing' : '0', 'border-collapse' :'separate'})
                        ], style = {'margin-top' : '5px'}
                        ),
                          #taeget Date range picker
                        html.Div(['Dates to Forecast: ',
                            dcc.DatePickerRange(
                                id='date_picker_target',
                                start_date = date.today()-timedelta(days=3),
                                end_date = date.today()+timedelta(days=30),
                                min_date_allowed = date.today()-timedelta(days=3),
                                max_date_allowed = date.today()+timedelta(days=30),
                                start_date_placeholder_text = 'Start date',
                                display_format='DD-MMM-YYYY',
                                first_day_of_week = 1,
                                end_date_placeholder_text = 'End date',
                                style = {'font-size': '12px','display': 'inline-block', 'border-radius' : '2px', 'border' : '1px solid #ccc', 'color': '#333', 'border-spacing' : '0', 'border-collapse' :'separate'})
                        ], style = {'margin-top' : '5px'}
                        ),

                        #taeget Date range picker
                        html.Div(['Date to validate: ',
                            dcc.DatePickerSingle(
                                id='date-picker-val',
                                date = date.today()-timedelta(days=1),
                                min_date_allowed = date.today()-timedelta(days=1),
                                max_date_allowed = date.today()-timedelta(days=1),
                                display_format='DD-MMM-YYYY',
                                style = {'font-size': '12px','display': 'inline-block', 'border-radius' : '2px', 'border' : '1px solid #ccc', 'color': '#333', 'border-spacing' : '0', 'border-collapse' :'separate'})
                        ], style = {'margin-top' : '5px'}
                        )

                    ],
                    style = {'margin-top' : '10px',
                            'margin-bottom' : '5px',
                            'text-align' : 'left',
                            'paddingLeft': 5})

                ],
                className = 'col-4'), # Filter part 1

                #Filter pt 2
                html.Div([

                    html.Div([
                        html.H5(
                            children='Filters by No. of Models to explore & Tickers:',
                            style = {'text-align' : 'left', 'color' : corporate_colors['medium-blue-grey']}
                        ),
                        #tickers group selection l1
                        html.Div(['Select Tickers (more=slower run)',
                            dcc.Dropdown(id = 'l1_tickers',
                                options = ticks,
                                value = ['GS','AAPL'],
                                multi = True,
                                placeholder = "Select " +"Symbol"+ " (leave blank to include 2)",
                                style = {'font-size': '13px', 'color' : corporate_colors['medium-blue-grey'], 'white-space': 'nowrap', 'text-overflow': 'ellipsis'}
                                )
                            ],
                            style = {'width' : '70%', 'margin-top' : '5px'}),
                        #model count
                        html.Div(['Select models to explore (more=slower run)',
                            dcc.Dropdown(id = 'l2_model_cnt',
                                options = [5,10,15,20,25,30],
                                value = 5,
                                multi = False,
                                placeholder = "Select (leave blank to explore 20 models)",
                                style = {'font-size': '13px', 'color' : corporate_colors['medium-blue-grey'], 'white-space': 'nowrap', 'text-overflow': 'ellipsis'}
                                )
                            ],
                            style = {'width' : '70%', 'margin-top' : '5px'})
                    ],
                    style = {'margin-top' : '10px',
                            'margin-bottom' : '5px',
                            'text-align' : 'left',
                            'paddingLeft': 5}),
                            html.Button('Calculate', id='create_button',n_clicks=0)

                ],
                className = 'col-4'), # Filter part 2
    #             html.Div(id="progress"), html.Div(id="result"),
    # dcc.Interval(id="interval", interval=500), 
                html.Div([
                ],
                className = 'col-2') # Blank 2 columns


            ],
            className = 'row') # Internal row

        ],
        className = 'col-12',
        style = filterdiv_borderstyling) # External 12-column

    ],
    className = 'row sticky-top'), # External row

    #####################
    #Row 4
    get_emptyrow(),

    #####################
    #Row 5 : Charts
    html.Div([ # External row

        html.Div([
        ],
        className = 'col-1'), # Blank 1 column

        html.Div([ # External 10-column

            html.H2(children = "Best Model Validation Performances",
                    style = {'color' : corporate_colors['white']}),

            html.Div([ # Internal row - RECAPS

                html.Div([],className = 'col-4'), # Empty column

                html.Div([
                    dash_table.DataTable(
                        id='recap-table',editable=True, row_deletable=True,
                        style_header = {
                            'backgroundColor': 'transparent',
                            'fontFamily' : corporate_font_family,
                            'font-size' : '1rem',
                            'color' : corporate_colors['light-green'],
                            'border': '0px transparent',
                            'textAlign' : 'center'},
                        style_cell = {
                            'backgroundColor': 'transparent',
                            'fontFamily' : corporate_font_family,
                            'font-size' : '0.85rem',
                            'color' : corporate_colors['white'],
                            'border': '0px transparent',
                            'textAlign' : 'center'},
                        cell_selectable = False,
                        column_selectable = False
                    )
            ],
                
                className = 'col-4'),

                html.Div([],className = 'col-4') # Empty column

            ],
            className = 'row',
            style = recapdiv
            ), # Internal row - RECAPS

            html.Div([ # Internal row

                # Chart Column
                html.Div([
                    dcc.Graph(
                        id='pred')
                ],
                className = 'col-12')

            ],
            className = 'row'), # Internal row


        ],
        className = 'col-10',
        style = externalgraph_colstyling), # External 10-column

    ],
    className = 'row',
    style = externalgraph_rowstyling
    ), # External row

])

####################################################################################################
